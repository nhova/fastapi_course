name: Build and Deploy Code

on:
  push:
    branches: 
      - "main"
jobs:
  # build:
  #   environment:
  #     name: testing
  #   env:
  #     DB_HOST: ${{secrets.DB_HOST}}
  #     DB_PORT: ${{secrets.DB_PORT}}
  #     DB_NAME: ${{secrets.DB_NAME}}
  #     DB_USER: ${{secrets.DB_USER}}
  #     DB_PASS: ${{secrets.DB_PASS}}
  #     JWT_KEY: ${{secrets.JWT_KEY}}
  #     JWT_ALG: ${{secrets.JWT_ALG}}
  #     JWT_EXP: ${{secrets.JWT_EXP}}
  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_PASSWORD: ${{secrets.DB_PASS}}
  #         POSTGRES_DB: ${{secrets.DB_NAME}}_test
  #       ports: 
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: pullin git repo
  #       uses: actions/checkout@v2
  #     - name: install python version 3.0
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: "3.9"
  #     - name: upgrade pip
  #       run: python -m pip install --upgrade pip
  #     - name: install requirements
  #       run: pip install -r requirements.txt
  #     - name: run our tests
  #       run: |
  #         pip install pytest
  #         pytest      
  #     - name: Cache Docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{secrets.DOCKERHUB_USER}}
  #         password: ${{secrets.DOCKERHUB_TOKEN}}
  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Build and push
  #       id: docker_build
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./
  #         file: ./Dockerfile
  #         builder: ${{ steps.buildx.outputs.name }}
  #         push: true
  #         tags:  ${{secrets.DOCKERHUB_USER}}/fastapi-course:latest
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache
  #     - name: Image digest
  #       run: echo ${{ steps.docker_build.outputs.digest }}
  # deploy-heroku:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build
  #   environment: Heroku-prod
  #   steps:
  #     - name: pullin git repo
  #       uses: actions/checkout@v2
  #     - name: Deploy to Heroku
  #       uses: akhileshns/heroku-deploy@v3.12.12
  #       with:
  #         heroku_api_key: ${{secrets.HEROKU_API_KEY}}
  #         heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
  #         heroku_email: ${{secrets.HEROKU_EMAIL}}
  deploy-digital-ocean:
    runs-on: ubuntu-latest
    # needs:
    #     - build
    environment: Digital-Ocean-prod
    steps:
      - name: Deploy on Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          port: ${{ secrets.PORT }}
          script: |
            whoami
            ls -al
            touch deployed
